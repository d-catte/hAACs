export enum SwipeDirection {
    up,
    down,
    left,
    right,
    none
}

export component AdaptiveKeyboard inherits Window {
    in-out property<SwipeDirection> swipe_direction;
    in property <string> word_suggestion_one: "";
    in property <string> word_suggestion_two: "";
    in property <string> word_suggestion_three: "";

    height: 300px;
    width: 1024px;
    no-frame: false;
    title: "hAACs Runtime";

    Rectangle {
        border-color: #00ff04;
        border-width: 2px;
        height: 150px;
        width: 150px;
        x: 0px;
        y: 0px;
        SwipeGestureHandler {
            handle-swipe-down: true;
            handle-swipe-left: true;
            handle-swipe-right: true;
            handle-swipe-up: true;
            height: 150px;
            opacity: 1;
            visible: true;
            width: 150px;
            x: 0px;
            y: 0px;

            Text {
                text: "Q";
                vertical-alignment: TextVerticalAlignment.top;
                wrap: TextWrap.word-wrap;
                x: 70px;
                y: 5px;
            }
            Text {
                text: "W";
                x: 70px;
                y: 70px;
            }
            Text {
                text: "E";
                x: 135px;
                y: 70px;
            }
            Text {
                text: "R";
                x: 70px;
                y: 125px;
            }
            Text {
                text: "T";
                x: 10px;
                y: 70px;
            }

            swiped => {
                root.handle_swipe(self.current-position.x, self.pressed-position.x, self.current-position.y, self.pressed-position.y);
                root.send_swipe_update("Q", "R", "T", "E");
            }
            TouchArea {
                height: 40px;
                mouse-cursor: MouseCursor.pointer;
                width: 40px;
                x: 55px;
                y: 55px;
                clicked => {
                    root.character_typed("W");
                }
            }
        }
    }
    Rectangle {
        border-color: #00ff04;
        border-width: 2px;
        height: 150px;
        width: 150px;
        x: 0px;
        y: 150px;
        SwipeGestureHandler {
            handle-swipe-down: true;
            handle-swipe-left: true;
            handle-swipe-right: true;
            handle-swipe-up: true;
            height: 150px;
            width: 150px;
            x: 0px;
            y: 0px;
            Text {
                text: "S";
                x: 70px;
                y: 70px;
            }
            Text {
                text: "A";
                x: 70px;
                y: 5px;
            }
            Text {
                text: "D";
                x: 135px;
                y: 70px;
            }
            Text {
                text: "F";
                x: 70px;
                y: 125px;
            }
            Text {
                text: "G";
                x: 10px;
                y: 70px;
            }

            swiped => {
                root.handle_swipe(self.current-position.x, self.pressed-position.x, self.current-position.y, self.pressed-position.y);
                root.send_swipe_update("A", "F", "G", "D");
            }
            TouchArea {
                height: 40px;
                mouse-cursor: MouseCursor.pointer;
                width: 40px;
                x: 55px;
                y: 55px;
                clicked => {
                    root.character_typed("S");
                }
            }
        }
    }

    Rectangle {
        border-color: #00ff04;
        border-width: 2px;
        height: 150px;
        width: 150px;
        y: 150px;
        x: 150px;
        SwipeGestureHandler {
            handle-swipe-down: true;
            handle-swipe-left: true;
            handle-swipe-right: true;
            handle-swipe-up: true;
            height: 150px;
            width: 150px;
            Text {
                text: "X";
                x: 70px;
                y: 70px;
            }
            Text {
                text: "Z";
                x: 70px;
                y: 5px;
            }

            Text {
                text: "C";
                x: 10px;
                y: 70px;
            }
            Text {
                text: "Space";
                x: 58px;
                y: 125px;
            }
            Text {
                text: ",";
                x: 137px;
                y: 67px;
            }

            swiped => {
                root.handle_swipe(self.current-position.x, self.pressed-position.x, self.current-position.y, self.pressed-position.y);
                root.send_swipe_update("Z", "Space", "C", ",");
            }
            TouchArea {
                height: 40px;
                mouse-cursor: MouseCursor.pointer;
                width: 40px;
                x: 55px;
                y: 55px;
                clicked => {
                    root.character_typed("X");
                }
            }
        }
    }
    Rectangle {
        border-color: #00ff04;
        border-width: 2px;
        height: 150px;
        width: 150px;
        x: 874px;
        y: 150px;
        SwipeGestureHandler {
            handle-swipe-down: true;
            handle-swipe-left: true;
            handle-swipe-right: true;
            handle-swipe-up: true;
            height: 150px;
            width: 150px;
            Text {
                text: "J";
                x: 70px;
                y: 70px;
            }
            Text {
                text: "H";
                x: 70px;
                y: 5px;
            }
            Text {
                text: "K";
                x: 135px;
                y: 70px;
            }
            Text {
                text: "L";
                x: 10px;
                y: 70px;
            }
            Text {
                text: "M";
                x: 70px;
                y: 120px;
            }

            swiped => {
                root.handle_swipe(self.current-position.x, self.pressed-position.x, self.current-position.y, self.pressed-position.y);
                root.send_swipe_update("H", "M", "L", "K");
            }
            TouchArea {
                height: 40px;
                mouse-cursor: MouseCursor.pointer;
                width: 40px;
                x: 55px;
                y: 55px;
                clicked => {
                    root.character_typed("J");
                }
            }
        }
    }
    Rectangle {
        border-color: #00ff04;
        border-width: 2px;
        height: 150px;
        width: 150px;
        x: 874px;
        y: 0px;
        SwipeGestureHandler {
            handle-swipe-down: true;
            handle-swipe-left: true;
            handle-swipe-right: true;
            handle-swipe-up: true;
            height: 150px;
            width: 150px;
            Text {
                text: "U";
                x: 70px;
                y: 70px;
            }
            Text {
                text: "Y";
                x: 70px;
                y: 5px;
            }
            Text {
                text: "I";
                x: 135px;
                y: 70px;
            }
            Text {
                text: "O";
                x: 70px;
                y: 125px;
            }
            Text {
                text: "P";
                x: 10px;
                y: 70px;
            }

            swiped => {
                root.handle_swipe(self.current-position.x, self.pressed-position.x, self.current-position.y, self.pressed-position.y);
                root.send_swipe_update("Y", "O", "P", "I");
            }
            TouchArea {
                height: 40px;
                mouse-cursor: MouseCursor.pointer;
                width: 40px;
                x: 55px;
                y: 55px;
                clicked => {
                    root.character_typed("U");
                }
            }
        }
    }
    Rectangle {
        border-color: #00ff04;
        border-width: 2px;
        height: 150px;
        width: 150px;
        x: 724px;
        y: 150px;
        SwipeGestureHandler {
            handle-swipe-down: true;
            handle-swipe-left: true;
            handle-swipe-right: true;
            handle-swipe-up: true;
            height: 150px;
            width: 150px;
            Text {
                text: "B";
                x: 70px;
                y: 70px;
            }
            Text {
                text: "V";
                x: 70px;
                y: 10px;
            }
            Text {
                text: "N";
                x: 135px;
                y: 70px;
            }
            Text {
                text: "Delete";
                x: 58px;
                y: 125px;
            }
            Text {
                text: ".";
                x: 10px;
                y: 67px;
            }

            swiped => {
                root.handle_swipe(self.current-position.x, self.pressed-position.x, self.current-position.y, self.pressed-position.y);
                root.send_swipe_update("V", "Delete", ".", "N");
            }
            TouchArea {
                height: 40px;
                mouse-cursor: MouseCursor.pointer;
                width: 40px;
                x: 55px;
                y: 55px;
                clicked => {
                    root.character_typed("B");
                }
            }
        }
    }
    Rectangle {
        border-color: #ffbb00;
        border-width: 2px;
        height: 150px;
        width: 424px;
        x: 300px;
        y: 150px;
        GridLayout {
            spacing: 20px;
            spacing-horizontal: 20px;
            spacing-vertical: 20px;
            Text {
                font-size: 20px;
                horizontal-alignment: TextHorizontalAlignment.center;
                text: "0";
                vertical-alignment: TextVerticalAlignment.center;
                col: 0;
                row: 0;
                TouchArea {
                    mouse-cursor: MouseCursor.pointer;
                    clicked => {
                        root.character_typed("0");
                    }
                }
            }
            Text {
                font-size: 20px;
                horizontal-alignment: TextHorizontalAlignment.center;
                text: "1";
                vertical-alignment: TextVerticalAlignment.center;
                col: 1;
                row: 0;
                TouchArea {
                    mouse-cursor: MouseCursor.pointer;
                    clicked => {
                        root.character_typed("1");
                    }
                }
            }
            Text {
                            font-size: 20px;
                            horizontal-alignment: TextHorizontalAlignment.center;
                            text: "2";
                            vertical-alignment: TextVerticalAlignment.center;
                            col: 2;
                            row: 0;
                            TouchArea {
                                mouse-cursor: MouseCursor.pointer;
                                clicked => {
                                    root.character_typed("2");
                                }
                            }
                        }
            Text {
                            font-size: 20px;
                            horizontal-alignment: TextHorizontalAlignment.center;
                            text: "3";
                            vertical-alignment: TextVerticalAlignment.center;
                            col: 3;
                            row: 0;
                            TouchArea {
                                mouse-cursor: MouseCursor.pointer;
                                clicked => {
                                    root.character_typed("3");
                                }
                            }
                        }
            Text {
                            font-size: 20px;
                            horizontal-alignment: TextHorizontalAlignment.center;
                            text: "4";
                            vertical-alignment: TextVerticalAlignment.center;
                            col: 4;
                            row: 0;
                            TouchArea {
                                mouse-cursor: MouseCursor.pointer;
                                clicked => {
                                    root.character_typed("4");
                                }
                            }
                        }
            Text {
                            font-size: 20px;
                            horizontal-alignment: TextHorizontalAlignment.center;
                            text: "5";
                            vertical-alignment: TextVerticalAlignment.center;
                            col: 0;
                            row: 1;
                            TouchArea {
                                mouse-cursor: MouseCursor.pointer;
                                clicked => {
                                    root.character_typed("5");
                                }
                            }
                        }
            Text {
                            font-size: 20px;
                            horizontal-alignment: TextHorizontalAlignment.center;
                            text: "6";
                            vertical-alignment: TextVerticalAlignment.center;
                            col: 1;
                            row: 1;
                            TouchArea {
                                mouse-cursor: MouseCursor.pointer;
                                clicked => {
                                    root.character_typed("6");
                                }
                            }
                        }
            Text {
                            font-size: 20px;
                            horizontal-alignment: TextHorizontalAlignment.center;
                            text: "7";
                            vertical-alignment: TextVerticalAlignment.center;
                            col: 2;
                            row: 1;
                            TouchArea {
                                mouse-cursor: MouseCursor.pointer;
                                clicked => {
                                    root.character_typed("7");
                                }
                            }
                        }
            Text {
                            font-size: 20px;
                            horizontal-alignment: TextHorizontalAlignment.center;
                            text: "8";
                            vertical-alignment: TextVerticalAlignment.center;
                            col: 3;
                            row: 1;
                            TouchArea {
                                mouse-cursor: MouseCursor.pointer;
                                clicked => {
                                    root.character_typed("8");
                                }
                            }
                        }
            Text {
                            font-size: 20px;
                            horizontal-alignment: TextHorizontalAlignment.center;
                            text: "9";
                            vertical-alignment: TextVerticalAlignment.center;
                            col: 4;
                            row: 1;
                            TouchArea {
                                mouse-cursor: MouseCursor.pointer;
                                clicked => {
                                    root.character_typed("9");
                                }
                            }
                        }
        }
    }
    Rectangle {
        border-color: #ff0000;
        border-width: 2px;
        height: 150px;
        width: 724px;
        x: 150px;
        y: 0px;
        GridLayout {
            spacing: 20px;
            spacing-horizontal: 20px;
            word_one := Text {
                font-size: 20px;
                horizontal-alignment: TextHorizontalAlignment.center;
                text: root.word_suggestion_one;
                vertical-alignment: TextVerticalAlignment.center;
                col: 0;
                row: 0;
                TouchArea {
                    mouse-cursor: MouseCursor.pointer;
                    clicked => {
                        root.autocomplete(word_one.text);
                    }
                }
            }
            word_two := Text {
                            font-size: 20px;
                            horizontal-alignment: TextHorizontalAlignment.center;
                            text: root.word_suggestion_two;
                            vertical-alignment: TextVerticalAlignment.center;
                            col: 1;
                            row: 0;
                            TouchArea {
                                mouse-cursor: MouseCursor.pointer;
                                clicked => {
                                    root.autocomplete(word_two.text);
                                }
                            }
                        }
            word_three := Text {
                            font-size: 20px;
                            horizontal-alignment: TextHorizontalAlignment.center;
                            text: root.word_suggestion_three;
                            vertical-alignment: TextVerticalAlignment.center;
                            col: 2;
                            row: 0;
                            TouchArea {
                                mouse-cursor: MouseCursor.pointer;
                                clicked => {
                                    root.autocomplete(word_three.text);
                                }
                            }
                        }
        }
    }

    // Called when a character button is pressed
    pure callback character_typed(string);

    // Called when a suggestion word button is pressed
    pure callback autocomplete(string);

    // Gets the direction of the swipe
    function get_swipe_direction(start_pos_x: length, current_pos_x: length, start_pos_y: length, current_pos_y: length) -> SwipeDirection {
        if (current-pos-x > start-pos-x + 20px) {
            return SwipeDirection.left;
        } else if (current-pos-x < start-pos-x - 20px) {
            return SwipeDirection.right;
        }

        if (current-pos-y > start-pos-y + 20px) {
            return SwipeDirection.up;
        } else if (current-pos-y < start-pos-y - 20px) {
            return SwipeDirection.down;
        }

        return SwipeDirection.none;
    }

    // Sets the swipe direction
    function handle_swipe(start_pos_x: length, current_pos_x: length, start_pos_y: length, current_pos_y: length) {
        swipe_direction = root.get_swipe_direction(start-pos-x, current-pos-x, start-pos-y, current-pos-y);
    }

    // Fires the character_typed callback
    function send_swipe_update(up: string, down: string, left: string, right: string) {
        if (swipe_direction == SwipeDirection.up) {
            root.character_typed(up);
        } else if (swipe_direction == SwipeDirection.down) {
            root.character_typed(down);
        } else if (swipe_direction == SwipeDirection.right) {
            root.character_typed(right);
        } else if (swipe_direction == SwipeDirection.left) {
            root.character_typed(left);
        }
    }
}