import { BasicScreen } from "basic_screen.slint";
import { HomeButton } from "widgets/home_button/home_button.slint";
import { Format } from "data/format.slint";
import { Slider, ComboBox, Button, ScrollView } from "std-widgets.slint";
import { KeyboardCallback, Keyboard } from "callback/keyboard_callbacks.slint";
import { AACCallback } from "callback/aac_callbacks.slint";
import { SettingsData } from "data/settings_data.slint";

enum SettingsScreen {
    Menu,
    Wifi
}

export component SettingsMenu inherits BasicScreen {
    property <[string]> offline_voices: ["Ryan"];
    in-out property <SettingsScreen> current_screen: Menu;

    public function set_screen(screen: SettingsScreen) {
        if (screen == SettingsScreen.Wifi) {
            SettingsData.refresh_internet();
        }
        self.current_screen = screen;
    }
    // Wifi
    HomeButton {
        visible: current_screen == SettingsScreen.Wifi;
        clicked => {
            root.set_screen(SettingsScreen.Menu);
        }
    }

    Text {
        visible: current_screen == SettingsScreen.Wifi;
        x: 0;
        y: 10px;
        width: 100%;
        height: 75px;
        text: "Networks";
        vertical-alignment: center;
        horizontal-alignment: center;
        font-size: 24px;
    }

auth_popup := PopupWindow {
    property <string> username;
    property <string> password;
    height: 150px;
    width: 300px;
    x: 362px;
    y: 225px;
    close-policy: PopupClosePolicy.no-auto-close;

    Rectangle {
        width: 100%;
        height: 100%;
        border-color: black;
        border-radius: 8px;
        border-width: 2px;
        background: grey;
        Text {
            text: "Username: ";
            x: 5px;
            y: 5px;
        }
        Rectangle {
            x: 71px;
            y: 5px;
            width: 215px;
            height: 17px;
            background: darkgray;
            TextInput {
                x: 4px;
                color: black;
                text <=> username;
            }
        }
        Text {
            text: "Password: ";
            x: 5px;
            y: 50px;
        }
        Rectangle {
            x: 71px;
            y: 50px;
            width: 215px;
            height: 17px;
            background: darkgray;
            TextInput {
                x: 4px;
                input-type: InputType.password;
                color: black;
                text <=> password;
            }
        }
        Button {
            width: 100px;
            height: 30px;
            x: 100px;
            y: 100px;
            text: "Join";
            clicked => {
                SettingsData.connect_to_wifi(username, password);
                auth_popup.close();
            }
        }
    }
}

Rectangle {
    visible: current_screen == SettingsScreen.Wifi;
    width: 800px;
    height: 80%;
    x: 112px;
    y: 100px;
    border-radius: 8px;
    border-color: black;
    border-width: 2px;

    ScrollView {
        width: 100%;
        height: 100%;
         VerticalLayout {
             y: 10px;
             width: 100%;
             spacing: 10px;

             for wifi in SettingsData.wifi_names: Rectangle {
                 x: 25px;
                 width: 750px;
                 height: 40px;
                 border-radius: 8px;
                 border-color: black;
                 border-width: 2px;

                 Text {
                    text: wifi;
                    x: 10px;
                 }

                 Button {
                    text: SettingsData.current_wifi == wifi ? "Disconnect": "Connect";
                    height: 30px;
                    width: 100px;
                    y: 5px;
                    x: 645px;

                    clicked => {
                        auth_popup.show();
                    }
                 }
             }
         }
    }
}


    // Menu
    HomeButton {
        visible: current_screen == SettingsScreen.Menu;
        clicked => {
            root.return_to_main_menu();
        }
    }

    Rectangle {
        visible: current_screen == SettingsScreen.Menu;
        height: 50px;
        width: 50px;
        x: 5px;
        y: 5px;
        z: 5;
        background: #636363;
        border-radius: 8px;

        TouchArea {
            height: 100%;
            width: 100%;

            Text {
                font-family: SettingsData.font-family-wifi;
                text: "B"; // Wifi symbol
                font-size: 40px;
                x: 3px;
                y: 5px;
                horizontal-alignment: center;
                vertical-alignment: center;
            }

            clicked => {
                set_screen(SettingsScreen.Wifi);
            }
        }
    }

    Text {
        visible: current_screen == SettingsScreen.Menu;
        x: 0;
        y: 10px;
        width: 100%;
        height: 75px;
        text: "Settings";
        vertical-alignment: center;
        horizontal-alignment: center;
        font-size: 24px;
    }

    Rectangle {
        visible: current_screen == SettingsScreen.Menu;
        width: 400px;
        height: 75px;
        x: 20px;
        y: 85px;
        border-radius: 8px;
        border-color: black;
        border-width: 2px;
        Text {
            x: 0px;
            y: 0px;
            height: 50px;
            width: 100%;
            text: "AAC Font";
            horizontal-alignment: center;
            vertical-alignment: center;
            font-size: Format.aac_font_size;
        }
        Slider {
            height: 20px;
            width: 90%;
            x: 20px;
            y: 40px;
            value: Format.aac_font_size / 1px;
            minimum: 10;
            maximum: 30;
            step: 1;
            changed(value) => {
                Format.aac_font_size = value * 1px;
            }
        }
    }

    Rectangle {
        visible: current_screen == SettingsScreen.Menu;
            width: 400px;
            height: 75px;
            x: 20px;
            y: 180px;
            border-radius: 8px;
            border-color: black;
            border-width: 2px;
            Text {
                x: 0px;
                y: 0px;
                height: 50px;
                width: 100%;
                text: "Keyboard";
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 18px;
            }
            ComboBox {
                height: 20px;
                width: 90%;
                x: 20px;
                y: 40px;
                model: ["Default", "Swipe", "USB"];
                current-value: "Default";
                selected(current-value) => {
                    if (current-value == "Default") {
                        KeyboardCallback.current_keyboard = Keyboard.Standard;
                    } else if (current-value == "Swipe") {
                        KeyboardCallback.current_keyboard = Keyboard.Swipe;
                    } else {
                        KeyboardCallback.current_keyboard = Keyboard.None;
                    }
                }
            }
        }

        Rectangle {
            visible: current_screen == SettingsScreen.Menu;
                    width: 400px;
                    height: 75px;
                    x: 20px;
                    y: 275px;
                    border-radius: 8px;
                    border-color: black;
                    border-width: 2px;
                    Text {
                        x: 0px;
                        y: 0px;
                        height: 50px;
                        width: 100%;
                        text: SettingsData.online ? "AAC Voices" : "Offline AAC Voices";
                        horizontal-alignment: center;
                        vertical-alignment: center;
                        font-size: 18px;
                    }
                    ComboBox {
                        height: 20px;
                        width: 90%;
                        x: 20px;
                        y: 40px;
                        model: SettingsData.online ? AACCallback.voices : offline_voices;
                        current-value: SettingsData.online ? AACCallback.voices[0] : offline_voices[0];
                        selected(current-value) => {
                            if (SettingsData.online) {
                                AACCallback.set_voice(current-value);
                            }
                        }
                    }
        }

   Rectangle {
       visible: current_screen == SettingsScreen.Menu;
            width: 400px;
            height: 75px;
            x: 20px;
            y: 370px;
            border-radius: 8px;
            border-color: black;
            border-width: 2px;
            Text {
                x: 0px;
                y: 0px;
                height: 50px;
                width: 100%;
                text: "Audio Output";
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 18px;
            }
            ComboBox {
                height: 25px;
                width: 70%;
                x: 20px;
                y: 40px;
                model <=> SettingsData.bluetooth_devices;
                current-value: "Speakers";
                selected(current-value) => {
                    SettingsData.set_bluetooth_audio_device(current-value);
                }
            }
            Button {
                height: 25px;
                width: 20%;
                x: 310px;
                y: 40px;
                text: "Refresh";
                clicked => {
                    SettingsData.refresh_bluetooth();
                }
            }
        }

    Rectangle {
        visible: current_screen == SettingsScreen.Menu;
        width: 400px;
        height: 75px;
        x: 20px;
        y: 465px;
        border-radius: 8px;
        border-color: black;
        border-width: 2px;
        Text {
            x: 0px;
            y: 0px;
            height: 50px;
            width: 100%;
            text: "Volume";
            horizontal-alignment: center;
            vertical-alignment: center;
            font-size: 18px;
        }
        Slider {
            height: 20px;
            width: 90%;
            x: 20px;
            y: 40px;
            value: SettingsData.volume;
            minimum: 0;
            maximum: 100;
            step: 1;

            changed(value) => {
                SettingsData.volume = value;
            }
        }
    }

    Rectangle {
        visible: current_screen == SettingsScreen.Menu;
            width: 400px;
            height: 360px;
            x: 604px;
            y: 85px;
            border-radius: 8px;
            border-color: black;
            border-width: 2px;
            Text {
                x: 0px;
                y: 0px;
                height: 50px;
                width: 100%;
                text: "Quick Buttons";
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 18px;
            }

            Text {
                x: 10px;
                y: 40px;
                height: 20px;
                width: 10%;
                text: "1";
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 18px;
            }
            ComboBox {
                height: 20px;
                width: 80%;
                x: 55px;
                y: 40px;
                model: SettingsData.quick_button_options;
                current-value: "Example";
                selected(current-value) => {
                    SettingsData.button_1 = self.current-index;
                }
            }

            Text {
                x: 10px;
                y: 80px;
                height: 20px;
                width: 10%;
                text: "2";
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 18px;
            }
            ComboBox {
                height: 20px;
                width: 80%;
                x: 55px;
                y: 80px;
                model: SettingsData.quick_button_options;
                current-value: "Example";
                selected(current-value) => {
                    SettingsData.button_2 = self.current-index;
                }
            }

            Text {
                x: 10px;
                y: 120px;
                height: 20px;
                width: 10%;
                text: "3";
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 18px;
            }
            ComboBox {
                height: 20px;
                width: 80%;
                x: 55px;
                y: 120px;
                model: SettingsData.quick_button_options;
                current-value: "Example";
                selected(current-value) => {
                    SettingsData.button_3 = self.current-index;
                }
            }

            Text {
                x: 10px;
                y: 160px;
                height: 20px;
                width: 10%;
                text: "4";
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 18px;
            }
            ComboBox {
                height: 20px;
                width: 80%;
                x: 55px;
                y: 160px;
                model: SettingsData.quick_button_options;
                current-value: "Example";
                selected(current-value) => {
                    SettingsData.button_4 = self.current-index;
                }
            }

            Text {
                x: 10px;
                y: 200px;
                height: 20px;
                width: 10%;
                text: "5";
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 18px;
            }
            ComboBox {
                height: 20px;
                width: 80%;
                x: 55px;
                y: 200px;
                model: SettingsData.quick_button_options;
                current-value: "Example";
                selected(current-value) => {
                    SettingsData.button_5 = self.current-index;
                }
            }

            Text {
                x: 10px;
                y: 240px;
                height: 20px;
                width: 10%;
                text: "6";
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 18px;
            }
            ComboBox {
                height: 20px;
                width: 80%;
                x: 55px;
                y: 240px;
                model: SettingsData.quick_button_options;
                current-value: "Example";
                selected(current-value) => {
                    SettingsData.button_6 = self.current-index;
                }
            }

            Text {
                x: 10px;
                y: 280px;
                height: 20px;
                width: 10%;
                text: "7";
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 18px;
            }
            ComboBox {
                height: 20px;
                width: 80%;
                x: 55px;
                y: 280px;
                model: SettingsData.quick_button_options;
                current-value: "Example";
                selected(current-value) => {
                    SettingsData.button_7 = self.current-index;
                }
            }

            Text {
                x: 10px;
                y: 320px;
                height: 20px;
                width: 10%;
                text: "8";
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 18px;
            }
            ComboBox {
                height: 20px;
                width: 80%;
                x: 55px;
                y: 320px;
                model: SettingsData.quick_button_options;
                current-value: "Example";
                selected(current-value) => {
                    SettingsData.button_8 = self.current-index;
                }
            }
        }

    Rectangle {
        visible: current_screen == SettingsScreen.Menu;
        width: 400px;
        height: 75px;
        x: 604px;
        y: 465px;
        border-radius: 8px;
        border-color: black;
        border-width: 2px;
        Text {
            x: 0px;
            y: 0px;
            height: 50px;
            width: 100%;
            text: SettingsData.online ? "Update From Internet" : "Update From USB";
            horizontal-alignment: center;
            vertical-alignment: center;
            font-size: 18px;
        }
        Button {
            text: "Scan";
            height: 25px;
            width: 90%;
            x: 20px;
            y: 40px;
            clicked => {
                SettingsData.update();
            }
        }
    }
}