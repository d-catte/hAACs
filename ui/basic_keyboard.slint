import { KeyboardCallback } from "callback/keyboard_callbacks.slint";
import { CarouselTheme } from "widgets/carousel/carousel_theme.slint";

export component KeyButton inherits Rectangle {
    in property <string> char;

    height: 60px;
    width: 60px;
    background: touch.pressed ? #e0e0e0 : #636363;
    border-radius: 4px;

    touch := TouchArea {
        width: 100%;
        height: 100%;
        clicked => {
            KeyboardCallback.character_typed(char);
        }

        Text {
            text: char;
            font-family: CarouselTheme.font-family-mono;
            font-size: char.character-count > 1 ? (self.width - 10px) / char.character-count : (self.width - 10px);
            width: 100%;
            height: 100%;
            horizontal-alignment: center;
            vertical-alignment: center;
            letter-spacing: 2px;
            x: 0px;
            y: -3px;
        }
    }
}

export component AutocompletionButton inherits Rectangle {
    in property <int> index;
    width: 150px;
    height: 60px;
    background: touch.pressed ? #e0e0e0 : #636363;
    border-radius: 4px;

    touch := TouchArea {
        width: 100%;
        height: 100%;
        clicked => {
            if (KeyboardCallback.auto_complete[index] != "") {
                KeyboardCallback.autocomplete(KeyboardCallback.auto_complete[index]);
            }
        }

        Text {
            width: 100%;
            height: 100%;
            text: KeyboardCallback.auto_complete[index];
            font-family: CarouselTheme.font-family-mono;
            font-size: min(50px, ((self.width + 40px)/ self.text.character-count));
            horizontal-alignment: center;
            vertical-alignment: center;
            letter-spacing: 1px;
        }
    }
}

export component StandardKeyboard inherits Rectangle {
    in-out property <[string]> word_suggestions <=> KeyboardCallback.auto_complete;

    property <[string]> chars: ["Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P", "A", "S", "D", "F", "G", "H", "J", "K", "L", "Z", "X", "C", "V", "B", "N", "M", ".", "Space", "Delete"];
    property <[string]> numbers: ["0", "3", "4", "7", "8", "1", "2", "5", "6", "9"];

    height: 300px;
    width: 1024px;
    border-color: #000000;
    border-width: 4px;

    for char[i] in chars: KeyButton {
        char: char;
        width: char == "Space" ? 200px : char == "Delete" ? 200px : 60px;
        x: (get_letter_button_pos(i)[0] * self.width * 1.1 + horizontal_align_letter(get_letter_button_pos(i)[1])) + 180px;
        y: (get_letter_button_pos(i)[1] * self.height * 1.1) + 20px;
    }

    for num[i] in numbers: KeyButton {
        char: num;
        width: 50px;
        height: 50px;
        x: mod(i, 2) * 1.1 * self.width + 40px;
        y: mod(i, 5) * 1.1 * self.height + 15px;
    }

    for word[i] in word_suggestions: AutocompletionButton {
        index: i;
        x: 850px;
        y: 50px + i * 1.2 * self.height;
    }

    function get_letter_button_pos(index: int) -> [int] {
        if (index < 10) {
            return [index, 0];
        } else if (index < 19) {
            return [index - 10, 1];
        } else if (index < 27) {
            return [index - 19, 2];
        } else {
            return [index - 27, 3];
        }
    }

    function horizontal_align_letter(y_index: int) -> length {
        if (y_index == 1) {
            return 30px;
        } else if (y_index == 2) {
            return 60px;
        } else if (y-index == 3) {
            return 110px;
        } else {
            return 0px;
        }
    }
}